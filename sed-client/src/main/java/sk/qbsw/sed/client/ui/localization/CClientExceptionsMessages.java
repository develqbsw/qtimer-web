package sk.qbsw.sed.client.ui.localization;

/**
 * List of exception which can be passed to the client when the system
 * 
 * @author Dalibor Rak
 * @Version 0.1
 * @since 0.1
 */
public class CClientExceptionsMessages {
	public static final String MESSAGE_ARGUMENTS_SEPARATOR = "#";

	public static final String ACTIVITY_ALREADY_EXISTS = "ACTIVITY_ALREADY_EXISTS";
	public static final String ACTIVITY_UNKNOWN_TYPE = "ACTIVITY_UNKNOWN_TYPE";
	public static final String PROJECT_ALREADY_EXISTS = "PROJECT_ALREADY_EXISTS";
	public static final String PROJECT_COMBINATION_GROUP_AND_ID_ALREADY_EXISTS = "PROJECT_COMBINATION_GROUP_AND_ID_ALREADY_EXISTS";
	public static final String LOGIN_ALREADY_IN = "LOGIN_ALREADY_IN";
	public static final String PIN_ALREADY_IN = "PIN_ALREADY_IN";
	public static final String CARD_CODE_ALREADY_IN = "CARD_CODE_ALREADY_IN";
	public static final String LOGIN_FAILED = "LOGIN_FAILED";
	public static final String LOGIN_BY_CARD_CODE_FAILED = "LOGIN_BY_CARD_CODE_FAILED";
	public static final String LOGIN_BY_PIN_FAILED = "LOGIN_BY_PIN_FAILED";
	public static final String LOGIN_BY_EMAIL_FAILED = "LOGIN_BY_EMAIL_FAILED";
	public static final String LOGIN_BY_PWD_FAILED = "LOGIN_BY_PWD_FAILED";
	public static final String USER_BLOCKED = "USER_BLOCKED";
	public static final String LOGIN_USED = "LOGIN_USED";
	public static final String TIMESHEET_FROM_AFTER_TO = "TIMESHEET_FROM_AFTER_TO";

	public static final String TIMESHEET_SPLIT_TIME_IS_LESS = "TIMESHEET_SPLIT_TIME_IS_LESS"; // ak splittime je mensi ako zaciatok znacky
	public static final String TIMESHEET_SPLIT_TIME_IS_GREATER = "TIMESHEET_SPLIT_TIME_IS_GREATER"; // ak splitime je vacsi ako koniec znacky
	public static final String TIMESHEET_OVERLAPPING = "TIMESHEET_OVERLAPPING";

	public static final String CLIENT_ID_USED = "CLIENT_ID_USED";
	public static final String CLIENT_TAX_USED = "CLIENT_TAX_USED";
	public static final String CLIENT_VAT_USED = "CLIENT_VAT_USED";
	public static final String CLIENT_NOT_FOUND = "CLIENT_NOT_FOUND";
	public static final String USER_PARENT_DISABLED = "USER_PARENT_DISABLED";
	public static final String USER_CHILDREN_DISABLED = "USER_CHILDREN_DISABLED";
	public static final String USER_NO_OTHER_MAIN_USER = "USER_NO_OTHER_MAIN_USER";
	public static final String TREE_INVALID_DESTINATION = "TREE_INVALID_DESTINATION";
	public static final String TREE_CYCLE_SUB = "TREE_CYCLE_SUB";
	public static final String TREE_CYCLE_SUPER = "TREE_CYCLE_SUPER";
	public static final String TREE_SWITCH_WITH_ROOT = "TREE_SWITCH_WITH_ROOT";
	public static final String SECTION_LOCKED = "SECTION_LOCKED";
	public static final String OLD_RECORD_SHOWN = "OLD_RECORD_SHOWN";
	public static final String CANNOT_CHANGE_HOLIDAY_ACTIVITY_TO_ANOTHER = "CANNOT_CHANGE_HOLIDAY_ACTIVITY_TO_ANOTHER";
	public static final String CANNOT_CHANGE_ANOTHER_TO_HOLIDAY_ACTIVITY = "CANNOT_CHANGE_ANOTHER_TO_HOLIDAY_ACTIVITY";
	public static final String MAIL_SENDING_ERROR = "MAIL_SENDING_ERROR";
	public static final String REQUEST_DUPLICITY = "REQUEST_DUPLICITY";
	public static final String REQUEST_EXIST_APPROVED_IN_TIME = "REQUEST_EXIST_APPROVED_IN_TIME";
	public static final String STATUS_UNALLOWED_TRANSITION = "STATUS_UNALLOWED_TRANSITION";
	public static final String STATUS_CANNOT_MODIFY = "STATUS_CANNOT_MODIFY";
	public static final String TIMESHEET_NOT_CONTINUOUS = "TIMESHEET_NOT_CONTINUOUS";
	public static final String TIMESHEET_PROJECT_REQUIRED = "TIMESHEET_PROJECT_REQUIRED";
	public static final String TIMESHEET_UNCLOSED_RECORD_IN_DATE_INTERVAL = "TIMESHEET_UNCLOSED_RECORD_IN_DATE_INTERVAL";
	public static final String TIMESHEET_MISSING_DURATION_VALUE = "TIMESHEET_MISSING_DURATION_VALUE";
	public static final String ENCRYPT_ERROR = "ENCRYPT_ERROR";
	public static final String REQUEST_APPROVING_BY_SUPERIOR_ONLY = "REQUEST_APPROVING_BY_CHIEF_ONLY";
	public static final String MISSING_REQUEST_FOR_NON_WORK_ACTIVITY = "MISSING_REQUEST_FOR_NON_WORK_ACTIVITY";
	public static final String MISSING_REQUEST_FOR_NON_WORK_ACTIVITY_USE_TABLE_REFREH = "MISSING_REQUEST_FOR_NON_WORK_ACTIVITY_USE_TABLE_REFREH";
	public static final String TIMESHEET_DEPENDENCY_INTERACTIVE_AFTER_ALERTNESS_BROKEN = "TIMESHEET_DEPENDENCY_INTERACTIVE_AFTER_ALERTNESS_BROKEN";
	public static final String TIMESHEET_MISSING_USER_RIGHT_FOR_ALERTNESS_WORK = "TIMESHEET_MISSING_USER_RIGHT_FOR_ALERTNESS_WORK";
	public static final String USER_TIMEOUT = "USER_TIMEOUT";
	public static final String TIMESHEET_EMPLOYEES_RECORDS_ARE_LOCKED = "TIMESHEET_EMPLOYEES_RECORDS_ARE_LOCKED";
	public static final String REQUESTS_EMPLOYEES_RECORDS_ARE_LOCKED = "REQUESTS_EMPLOYEES_RECORDS_ARE_LOCKED";
	public static final String MAX_INTERVAL_DATE_GENERATE_EMPLOYEE_ABSENCE_ERROR = "MAX_INTERVAL_DATE_GENERATE_EMPLOYEE_ABSENCE_ERROR";
	public static final String TIMESTAMP_USER_ACTIVITY_RESTRICTION_ERROR = "TIMESTAMP_USER_ACTIVITY_RESTRICTION_ERROR";
	public static final String DAY_TYPE_INVALID_VALUE = "DAY_TYPE_INVALID_VALUE";
	public static final String ACTIVITY_LIMIT_OVERLAPS_ANOTHER_VALID_ONE = "ACTIVITY_LIMIT_OVERLAPS_ANOTHER_VALID";
	public static final String TIMESTAMP_REQUIRE_ACTIVITY_REASON = "TIMESTAMP_REQUIRE_ACTIVITY_REASON";
	public static final String REQUEST_REASON_NOT_EDITABLE_RECORD = "REQUEST_REASON_NOT_EDITABLE_RECORD";
	public static final String TIMESHEET_RECORD_CANNOT_MODIFY = "TIMESHEET_RECORD_CANNOT_MODIFY";
	public static final String TIMESHEET_RECORD_CANNOT_DELETE = "TIMESHEET_RECORD_CANNOT_DELETE";
	public static final String TIMESHEET_RECORD_CANNOT_ADD = "TIMESHEET_RECORD_CANNOT_ADD";
	public static final String TIMESHEET_NOTHING_TO_CONFIRM = "TIMESHEET_NOTHING_TO_CONFIRM";
	public static final String TIMESHEET_NOTHING_TO_CANCEL = "TIMESHEET_NOTHING_TO_CANCEL";

	public static final String MISSING_REQUEST_FOR_HALF_DAY_HOLIDAY = "MISSING_REQUEST_FOR_HALF_DAY_HOLIDAY";
	public static final String MISSING_REQUEST_FOR_DAY_HOLIDAY = "MISSING_REQUEST_FOR_DAY_HOLIDAY";
	public static final String HOLIDAY_RECORD_ALREADY_EXISTS = "HOLIDAY_RECORD_ALREADY_EXISTS";

	public static final String USER_NOT_IN_DOMAIN = "USER_NOT_IN_DOMAIN";
	public static final String CANNOT_ADD_USER = "CANNOT_ADD_USER";

	public static final String HOLIDAYS_CANT_BE_GENERATED = "HOLIDAYS_CANT_BE_GENERATED";
	public static final String TIMESHEET_AVGSUM_ERROR = "TIMESHEET_AVGSUM_ERROR";

	public static final String TIMESHEET_ACTIVITY_TIME_MIN = "TIMESHEET_ACTIVITY_TIME_MIN";
	public static final String TIMESHEET_ACTIVITY_TIME_MAX = "TIMESHEET_ACTIVITY_TIME_MAX";
	public static final String TIMESHEET_ACTIVITY_HOURS_MAX = "TIMESHEET_ACTIVITY_HOURS_MAX";
	public static final String TIMESHEET_ACTIVITY_TIME_MAX_ZERO = "TIMESHEET_ACTIVITY_TIME_MAX_ZERO";
	public static final String TIMESHEET_CANT_ADD_NON_WORKING_ACTIVITY = "TIMESHEET_CANT_ADD_NON_WORKING_ACTIVITY";

	public static final String REQUESTS_NOT_ENOUGH_REMAINING_DAYS = "REQUESTS_NOT_ENOUGH_REMAINING_DAYS";
	public static final String REQUESTS_NOT_ENOUGH_REMAINING_DAYS_NEXT_YEAR = "REQUESTS_NOT_ENOUGH_REMAINING_DAYS_NEXT_YEAR";
	public static final String REQUESTS_NOT_ALLOWED_IN_FUTURE = "REQUESTS_NOT_ALLOWED_IN_FUTURE";
	public static final String REQUEST_ALREADY_EXISTS = "REQUEST_ALREADY_EXISTS";

	public static final String INTERVAL_WORK_DAY_NOT_CORRECT = "INTERVAL_WORK_DAY_NOT_CORRECT";
	public static final String INTERVAL_FREE_DAY_NOT_CORRECT = "INTERVAL_FREE_DAY_NOT_CORRECT";
	public static final String HOLIDAY_REQUEST_CANOT_CHANGE = "HOLIDAY_REQUEST_CANOT_CHANGE";
	public static final String HOLIDAY_REQUEST_CANOT_APPROVE_REJECTED = "HOLIDAY_REQUEST_CANOT_APPROVE_REJECTED";
	public static final String OUTSIDE_HOMEOFFICE_CANNOT_BE_MARKED_TOGETHER = "OUTSIDE_HOMEOFFICE_CANNOT_BE_MARKED_TOGETHER";
	public static final String NO_PERMISSION_FOR_HOME_OFFICE = "NO_PERMISSION_FOR_HOME_OFFICE";
	public static final String NO_REQUEST_FOR_HOME_OFFICE = "NO_REQUEST_FOR_HOME_OFFICE";
	public static final String JIRA_TOKEN_GENERATION_LINK_ERROR = "JIRA_TOKEN_GENERATION_LINK_ERROR";
	public static final String JIRA_ACCESS_TOKEN_GENERATION_ERROR = "JIRA_ACCESS_TOKEN_GENERATION_ERROR";

	private CClientExceptionsMessages() {
		// Auto-generated constructor stub
	}
}
